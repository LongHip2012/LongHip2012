import base64
exec(base64.b64decode(base64.b64decode(base64.b64decode(base64.b64decode(base64.b64decode(b'VVRJeGMyUkhUa2hQV0d4clVUQktOVmRXWXpGaE1rbDVUVVYwUkdKV1NuTlhiV3hEWkRKT2RHSklWbXRTYW14eFdXcEtOR1J0VG5CaFJFSmhWMGRuZDFNeFVuWlRNR3hFVVZka1NsSXdOVEpaYTJNMVpWZE9OVkZVYkVwU2JrNTFWMFZTUW1Wck1IaGpNMmhRWldzeE5GbHNUbXBqTUd4RVdrZE9UbEpGTVRaV00zQkdUakF4TmxSdVVrdGxXR1J1VTJwR00yUXdNVFpVYlVwT1ZraE9ObFJYTUhkaWEzaEVVVmMxV1ZKRlJqWlVWRVo2WlVVNU5sUlVTbWxWTWs1NlUxVk9hMWt3TVVWVVdIQllaV3RWTTFSWWNGTmtSWEExWkRKa1MwMVlaRE5VV0hCUFdXc3hWV016Y0U5V2VrSjFWRVZPUW1Kc2FFVlJXSEJPVFZoT05GUXpjRTVOTWtwVVdrZFNSR0ZWUm01VFZVNURaVlp3V1ZSdGVHdFNhbXh4V1dwS05HUnRUbkJSVkd4S1VUSlNhbFJWVWs1bGJHUTJVVzVTUzJReU9XNVRWVTVDV2pGcmVVOVlUbWxOTUd4dVZVWk9RMlZXYkZoT1YzUnBUV3BDTVZkVVNtOWtiVVpZVkcxNFRGSXdOVEpaYTJNMVpWZE9OV0V3ZEVwUk1FWnVVMVZvUTJWWFJsaE9WRUpNVWpGc2NGcFVTazlrYlVwSVQxaHNiVmRJVVhkWGJHaHZUVWRhV1dSSWJHRlhSVFZ6V2tWWk5XRnRTWGxsU0ZwcVltcENjRk14Um5aVE1FNTBZa2hTYWxKNmJEVmFSVTVEWlZad1dWSnFSbUZYUlRSM1dUTmtkMk5IU2xsUmJscHFZbXhHYmxwRlpITmtSbkJTWTBoQ2FWZEZTakpaTWpWU1dqSlNTR0ZJYkdGV01GcHlXVlpqTVdKclRuUmlTRkpxVW5wc05WcEZUa05sYlZaWlZGVjBZV0pyY0RKWmJFNURZVEZzV1ZWdGVHdFNNbmd3VjJ4T1EyTkhTbGxSYmxwcVlteEdibGRyWkVkTlJuQlpWVzVDYVZZeFZucFRWV2hUWTBkS1dGWnRkR0ZXTTJkM1YxWkdkbE13YkRWUldGSk5WWHBDYmxWVGRFaE9ia0paVmxka2FGUlZPWHBaYlRGdVdqRk5lVlpxVmtwUmVrSXdWRVpHZDJOc2NGbGlTSEJLVWtSQ2JscFlaSFphTUd4RVVWZGtTbUpWTUhkYVZsSktUbGROZWxacVVrNVdNbEo2V1Zkd1EyTnRVbkZhU0ZaT1RUSmpNRmxVVG05a01sRjZVV3BPVDJKVWEzbFpWRW8wWlVWc2NXSXlaR3hsVlc5NFdYcEtWMkV4WjNsVGFsWktZVzA1YmxaSE1EVmtWbkJVWkRKa1NtSnJOSGRYVm1oTFRVWm5lbFZ1UW1sV01WWndWREpzUTFReVNYbE9WM2h0VlROa1RGTlZUa0phTUd4RVUyNWthMkpyV2pWYVZXUXdaVWRLTmxScVRtbFRSbXd6VkRGa01HUXlWblZSYm14b1RUQldObGxyYUc1T1YwbDVZek5zYTJGdGREWlpXR3hLVG10c1NXTXliR3RYUlRWelYydFpOV0ZYVmxSVFZGcEtVbFJXTWxsdE1WWmpNR3hFVTI1d2ExSXdXalZhUlZrMVRVZEdXRTFYZUVwaGJUbHVWa2N3TldSV2NGbE5TRTVFWVZWR2JsTlZUa0poVm14WVZXNVNhRlo2VW5CVU1teERUakJzZFZadWNHRldNVXB0VjFjMWNtRlZPWEJSYXpscFRXcFdjMVJGVGtKaFYwMTZWVzFvYW1Kc1NtMWFSV1J6WkVad1ZGTlVXa3BTVkZZeVdXMHhWMDlWVG5WTlJYUkVZVlV4YmxSR1RYZGtSV3hHWVd0U2RsSjZRbTVaYXpsSVRtNUNXV0V5WkZSV2EwWnVWMVJvVUUxSFNuUlpNbVJhU3pCak0ySldZekZpYTJ4RVRVaFNUVlZZUW5KWGJHUmFXakZ2ZVZacVFsbE5iWGd6VXpCT2NrNXJUbkJSVjJSS1VUQkpkMWt5TlhKT2EwNXdVVmRrU2xFd1JtNVRWVTVDV2pKR1dWRlhaRkZWTUVvMVYyeG9SMDFXY0ZsVWFrSnFaVlJXZFZkc2FGSmlNRzk1WVVSQ2ExTkZTalpVTW1zMFpHeHNXVkZ1UWsxaVYzZ3pXVlprWVU1VmVIUlBXR3hoWlZkT2QxUkhOVk5pUjFaSlZWaFdhazB4U2pWWlZtaENZakIwVW1JeVpFcFJNRVp1VTFWT1Fsb3diRWxUYlhoclUwWmFOVmx0YkVOalIwNUNZakprU2xFd1JtNVhiR2h2WVd4d1dWRnFRbEJhTWpsdVUxVk9RbG93YkVSUlYyUktVMFZ3YzFwRmFGZGxWMHB3VVdzNWFVMXFWbk5STW1SMllXdHNSRTFJVWsxVk1FcEtaSHBhUTJSRmJFaGtTRUV3V1c1V1JWbHNUa05OUjA1MFVsZGthRTFzV1RGVFZVMTNaRVY0VW1OSGRHRldNV3h1VjFSS2IySkdhM2xrUjFwb1RXeFpNVk13WkRCaVIxWlhUMWhDYVdKclNYaGFSVTR6V2pKU1dWUnRlR3BpUkd4M1dUQk9jazVyVG5CUlYyUktVVEJLZDFkdGJFTmpiSEJaWWtkYWFGWjZWak5hUm1oU1dqSktkRTlVUWtwU01uZ3hVMVZrTUdKSFZsbFVWRnBFWVZWR2JsTlZUa0phTUd4RVVWZGthbUpXV1hkYVJtaExaRlZzUmxkdGFHbFRSVFZ6VkVWT1FtRldUWGxXYWxaS1VqTlNkbVI2WkZOa1ZuQTFVV3BCTUZsdVZsVlpiV3hEVFVSU2FXTlhhR2hWZWxKd1VUSnNRbG93YkVSUmJrSmhZVlZLZVZkc2FITmFiVVpZVGxoa2ExZEdSbTVWUmxGM1dqQnNkRkp0ZEdsV01uZ3hVMWR3ZGxNd2JFUlJWMlJLVVRCR2JsTlZUa05sVm5CWlZXcEdhbUpVVW01V2EyaExUVlp3VkdReVpFcGhNRnB5V1d4a2MyUlZiRWhrUjNoc1ZUQkpNR1I2V2tkaGEyeEpWVzA0TUZsdVZqUlhXR3hEVFVkR1RsUXlaR2xpVjJSdVYxUm9VRTFIU25SWk0xWktXakk1VEZOVlRrSmFNR3hJWkVkNGJGWnFiSEpYVm1oVFlVVnNSVTFIWkdoTmJGa3hXWHBHTUdOc2NGbGlSMXBvVm5wV00xcEdhRk5hUlU1d1VWZGtTbEV3U25kWGJXeERZMnh3V1dKSFdtRlNNRmwzVjFaYWVtRlhVbGxVYlhoaFVtcHNjRnBXVGt0YVJXeElZa2h3U2xKVVZqSlpiVEZXVG10T2NGRlhaRXBSTUVadVUxVk9RbG95UlhsV2FsWnFUVmhTZVZkc2FITmFiVVpZVGxoa2ExZEdTbXRXTTJ4TFRWZE5lVlp0ZEZsTmEyOHhVMWQzZDFveFFsUlJha1pxVFd4YU5WZEVTbk5rTUU1d1VWZGtTbEV3Um01VFZVNUNXakpGZVZacVZtcE5XRko1VjJ4b2MxcHRSbGhPV0dSclYwWkthMVl6YkV0bGJWSklVbTVzYTFKcWEzZFpWbU40WWtWc2MwMUhaRkZWTUVweVYxWm9VMkpIVWtoaVNGSmhWWHBXTVZscVRtcGlNSFJTWWpKa1NsRXdSbTVUVlU1Q1dqQnNTVk50ZUd0VFJsbzFXVzFzUTFaWFRuVldiWGhOVVRCR2NGVjZTbGRPVld4SllXdFNkbFl3TVc1YVJXUnhZVWhWTTFKdGNFcFRSa3AyWkhwYVEyUlhSa1JSYlhBelRqRktNVmR1YXpCaFZVNXVZakprU2xFd1JtNVpWbVJhV2pKRmVWWnFWbGxOYkVwdldrVmtSMWxyYkhWV2JuQmhWakZLYlZkWE5YSmhWbWhVVVZkb1VWVXdTWGhaZWtwWFpWWm5lV0pJWkZCYU1qbHVVMVZPUWxvd2JFUlJWMlJLVTBWd2MxcEZhRmRsVjBwd1VXdGtXbFl6YURaWGJFNHpXakJzY21SSGVHeFZNRkpHWVRKT1VHRnJiRTVWTVVvMFkydFNiMlJVV2s5aGEyeEpWVWRvTVU1cVFtNVhhemxJVGpOQ1dFNVhOVXBTTUhodlpGUlZOV05GYkVoTk1GSjJWMGQwYmxsVVNuRlNSemxZVkZkb1Nsb3lPVXhUVlU1Q1dqQnNTRlp1VGxwWFJVbzJWMnhrVWxveFFsUlJiWFJhVjBaS2MxcEZaSE5rUm5CVVRsaFdhVTB5VG5aVE1VNUNaRVZzU0dSSGVHeFdhbXh5VjFab1UyRkdaRFZUYm5CclVqQmFOVnBGV1RWTlIwWllUVmQ0U21KRVFreFRWVTVDV2pCc1NHSkhNVXBTTVZwNlYxWm9RMlZzY0ZoVlYyUlJZVlZKZDFsV1kzaGlSbkJJVm01T2ExSXdWblpaVldNMVRWZE9kVlJVYkU1V1JVWjNWREprZGxvd2JFUlJWMlJLVVRCR2JsTlZhRXRpUjFKSlZtNXNhV0ZWU2toWFZtUTBaV3h3VkdReVpFcGhNMUp6V2xaT1JWSlhkR3BVTW5CS1VqSndiMlJZU1RWTlJXeElZVzFvTVdOVldqRlRWVkpHWkRCc1NWVnVRVEJaYmtWMldXMHhhbUZGYkc1aU1IUktVVEJHYmxOVmFFdGlSMUpKVm01c2FXRlZTbFpaTWpWWFlrVjRSRkZYYkZSTmJGa3hVMVZvY1ZKSE9WaFVWMlJyVWpKd2IyUlVaRWRoYTJ4SlZXMDVNMDVyU2pGWlZVNURZVzVqTTFWdVZtRmxWRkp3VVRKa2RtRnJiRVJOU0ZKTlZUQktTbVI2V2tOa1JXeElVMnBHWVdKV2JHNVhiVEExWXpKS1NFOVVUa3BTYkVwM1dWUkdVMlJ0UmpWUldGSk5WWHBDVEZkclpGZGlWV3hJV2tkNGExSnFhM2RaYWtvd1lrZEtjMDlYYUdsaVZrcHRXWHBLVjJWdFRYbGlTRnBwWVZka2QxUXlaSFphTUd4RVVWZGthRkl4V205WGEyUlhaVmRPTlZGVWJFcFRTRTVNVTFWT1Fsb3diRVJSVjJSS1VUQkdkVnBHYUU5aVIwNXdUVmRvWVUxc1dqRmFSVTVxVG10c1JGcEZOV2xOTTBKM1dXdGtOR0ZGZURaV1dGWk9VVEJHZGxacVNuTmtWbkJJVDFST2FtVlZTbEJXYTA1Q1pVVXhSRTVJWkZCbFZVcFpXVlpqTUUxck5VVmpNbVJzVWtacmQxTXhUa05SYlU1SlVXNU9ZVlp0VW5OWFYzUXdZMGRTUkU5RVJrNWxiVTR4VkZod1dsb3dkRVprUld4WFVsUkdUbFJGVGtOak1rWllaRWQ0U2xKWFVuTlhWRW93Wkd0MFZGRnJVbWhUUlhBeVdXeGtWbVJyTVZWVFZFWk5ZV3RHTVZSVlRUQmtNR3hIVkcxb1lXSlZXalZaVmswMFRWVXhObGt6Vms1bGJHeDFWRVZHZGxvd2JFUlJWMlJ0VlZjNWJsTlZUa0phTVd4WVZHMXdZVmRGTlRaVFZWRjNXakpPZEZadWFHdFdNVm8yV2tWb1RtUldiM2xXYWtKTVVUSlNkbHBGYUZOa01rNDJZak5hVFUweFNuZFpWRXBoWkcxS1NHVklXbXROYkZvMVdUTnJNV0Z0U1hsTlNGcGhZbXR3YzFkc1RYaE5SMFpZWkVSQ2FVMXVUakJYYlRBMVl6SktTRTlVVG1GWFJYQTJVMjVzTTFveVJraFdiV2hoVWpGYU5Wa3piM2hpTVhCWVVtMTBZVmRGY0RaVE1VWjJXakJzUkZGWFpHcE5iRm8yV1hwS2MyUnRTbkJSVkd4S1VqQmFjVmRVU2xkbGJVNDFUbGR3YVUxcWJIbFpWbVJYWld4a05WcEhjR2hXYW13MlYyeG9UMlZ0UmxoUFdGWkxUVlJDVEZOVlRrSmFNR3hKVlc1YWFFMXNXakZUVlZGM1dqRnNXRlJ0Y0dGWFJUVTJWRWMxVTJKSFZrbFZXRlpxVFRCS2VsbFdhRkppTUd4MFZHNXdhbUpXY0cxYVJXTTFZMnh3V0U1SFpGRlZNRVoxVTFkc2MxbHJNVmROU0ZacVRUQktlbGxXYUZKaU1HeHdXVEpzVEZadVRqTlhSa1oyV2pCc1JGRlhaR2hTTVZwdlYydGtWMlZYVGpWT1ZFWnFVakZLYjFwRlpGWmlNbFkxV2tkd2FVMXFiSGxaVm1SV1ltczVjRkZ0TVV0TmF6VjNWMFJPVDJKSFRYcFVia0pwVFdwUk5WcFVUazlpUjAxNlZHNUNhVTFxVlRWVGFrMTNZMFZPY0ZGWFpFcFJNRW8xVjJ4b1UwMVhUblJPUjJSb1VqRmFiMWRyWkZkbFYwNDFaREprYTFKNmJIbFhiR013VXpCT2RGVnRlR0ZoVlVwd1drWmtZV0pXWjNsWGJscHBVak5vTWxwSWJHOU5WMDE1Vm01c1RGWkhPVXhUVlU1Q1dqQnNTVnBIT1doV00yaHpVMVZhVTJWWFVsaFdWRnBFWVZWR2JsTlZUa0phTUd4RVVWZGthMU5GYnpGVU1tUjJXakJzUkZGWFpFcFJNRVp1VTFWT1Fsb3diRVJSYlRsaFZqQmFjbGRzYUV0bGEzaEVVV3BDYVUxdVVuTlpiV3hDVDFWc1NGcEhlR3RTYW10M1dXcEtNR0pIU25OUFYyaHBZbFpLYlZsNlNsZGxiVTE1WWtoYWFXRlhaSGRSTW14Q1dqQnNSRkZYWkVwUk1FWnVVMVZPUWxvd2JFaFZiV2hyVWpCV2JsVkdUa0ppYlZZMVUycENiRmRGU25OVFYzQjJZVlp3ZEU5WVRtbFNlbXQ2VTFkc00yRlhUbFJUVkZwS1lUQkdkVk5WVG5wYU1sSlpWRzE0YW1GVlJubFRWVTVxWVZWNFJGTnROV2xOYW14MVdXdGtWMXB0VWtoUFdFcGhWbnBTY0ZReWJFdE5SV3h3WkRKc2ExSjZiSGxYYkdNd1lWVTVjRk5YTlVwUk0wNXVXa1ZqTldOc2NGaE9SMlJNWlZWR2RWTlhOSGRpYTA1d1VWZGtTbEV3Um01VFZVNUNXakJzUkZGWFpFcFRSVFZ6VjFab1MyRnRSa1JSVkd4S1UwVndjMWt4YUZkaVIwMTZWVzV3VFdKclNqSlplazVTWWpCdmVXRkVRbXRUUlVvMlZESnJOR1J0VWtoaVNFcGhZbFJzZWxscll6Vk5NWEJaVTI1d1RXSlZOVEpaYkUwMVlVZE9TR0V6V21GaWEzQnpWMnhPYW1Nd2JFaGhSM2hhVmpGS2Mxa3lOVTVQVjBaSVZtMW9ZVkl4V2pWWk0yd3pXakZ3U0ZKcVFscFdSRVp5VjFab1UyRkZkRlJPV0VacVRXcHNNVk13VG5KVE1FNXdVVmRrU2xFd1JtNVRWVTVDV2pCc1JGRlhaRXBTTW5oMFUxVm9UMkpHYkZsVGJYQm9VbTVPZFZsNlRsZGhiR3Q1Vm01d2FtVlhVbXRUVlZGM1QxVnNSMVZ1Ykd0V01WVXlVVEpzUWxvd2JFUlJWMlJLVVRCR2JsTlZUa0phTUd4RVVWZGtTbEV3U25KWFZtaFRZVVpuZVZkdVdtbFNNMmd5V2toc1FrOVZiRWxVYlhoYVYwVndjVmxWV25waWJIQklVbXBDV2xVeVVtdFJNbXhDV2pCc1JGRlhaRXBSTUVadVUxVk9RbG93YkVSUlYyUktVVEJLY2xkV2FGTmhSV3hGVFVka1MwMHpUbkJYYWtrMVpHeHZlV1ZIZUZsTk1Vb3lXVlJLVjJSVmJIRmlNbXhyVVRCc2VsTlhOVk5rYlVWNVZtNVdTbUZ0T1hCVGJteENZMnRzU1ZWdVdtaE5iRm94VTFWT2Vsb3djRFZUV0U1S1lsWktiMXBGWkVaaFZUbHdVMWMxU2xFelRtNVhhMlJIVFVac1YwOVhNV2xOYm1oNldXcE9hbG93ZERWUlZ6VktZVmhrY0ZwRmFITmtNWEJVVTFSYVNtSldjREpaYTJRMFpHMVNOVk5xYkV0a01qbHVVMVZPUWxvd2JFUlJWMlJLVVRCR2JsTlZUa0phTUd4RVVWZGthazFzV2pGWGExazFZbGRKZVdWSVRtbE5NazV1VlVaT1EyVldjRmxTYWtaaFYwVTBkMWt6YXpGa01rbDZWR3BDVEZFeVVuWmFSV2hUWkRKT05tSXpXazFOTVVwM1dWUktZV1J0U2tobFNGcHJUV3hhTlZremF6RmhiVWw1VFVoYVdsZEZTbmRVUkVwaFpWWndXRlpZV21wTmJGb3hWMnRPYW1Nd2JFaGhSM2hhVmpGS2Mxa3lOVTVQVjBaSVZtMW9ZVkl4V2pWWk0yd3pXakZ3U0ZKcVFscFdSRVp5VjFab1UyRkZkRlJPV0VacVRXcHNNVk13VG5KVE1FNXdVVmRrU2xFd1JtNVRWVTVDV2pCc1JGRlhaRXBSTUVadVUxVk9RMk5HY0hCUmJuQmhWbnBXY2xkRVNtRmtiVXBJWlVoYWEwMVlUblZaYm14cldrVnNSVTFFYkVwUk1sSlZXa1prVDJGc2NGbFVibkJLVlRKT2JsZFdZekZoTUd4SlZHMTRhV0pXU20xWGJUQTFZekpLU0U5VVRsaGxWMUkyV2taa1QyRnNjRmxVYm5CTFRWUkNibFZHVVhkYU1WcEpVMnBHWVZVd1NtOVpiVEZTV2pKTmVWWnVWbUZTYW14MFdXcEtOR015U1hwYVIwcExUVEZKTVZrd1pGWmliR2hVVVZSc1VWVXdSblZaZWs1WFlXeHJlVlp1Y0dwbFYwMHlVVEpzUWxvd2JFUlJWMlJLVVRCR2JsTlZUa0phTUd4RVVWZGtTbEV3Um01VFZVNUNXakpPU1ZOdVFtbGliRXB0VjFSSk5XTXlTWHBUVnpsaFlWVndhVnBVVGxkbGJIQlpVMnBzV1ZVd1NsWmxSV3hQWkZad05WRnJaR2xOYm1oNldXcE9hbG94V2toaGExSjJVbnBXZGxOVlZsRlNTRkpJVGxjMVNtRlhkRXhUVlU1Q1dqQnNSRkZYWkVwUk1FWnVVMVZPUWxvd2JFUlJWMlJLVVRCR2JsTlZUa05oYlVsNVRsUkNhRlo2VlhoWGJFWjJXakJzUkZGWFpFcFJNRVp1VTFWT1Fsb3diRVJSVjJSS1VUQkdibGRzWkRSalJuQndVVzV3WVZaNlZuSlhSRXBoWkcxS1NHVklXbXROV0U1MVdXNXNhMXBGYkVWTlJHeEtVVEpTVVZscVRrTmxhM2h3VGtoV1MyVlZTbTlaYlRGU1dqSk5lVlp1Vm1GU2FteDBXV3BLTkdNeVNYcGFSMHBMVFRBMGVGZFVTazlpUjAxNlZGYzFXVlV3UlRWVlJrNURVakZzV0dWSWNHRlZNRXB2V1cweFVsb3lUWGxXYmxaaFVtcHNkRmxxU2pSak1rbDZXa2RLUzAweFNURlpNR1JXWW14b1ZGRlViRkZWTUVaMVdWWmpNV0pYU2pWWmVscEVZVlZHYmxOVlRrSmFNR3hFVVZka1NsRXdSbTVUVlU1Q1dqQnNSRkZYWkVwUk1FWnVXa1ZvUzA1Vk9XNWlNbVJLVVRCR2JsTlZUa0phTUd4RVVWZGtTbEV3Um01VFZVNUNXakJzUkZGWFpFcFJNRVp1VTFWT1EwMUhSa2hQV0VKaFRXMTRiMWx0YkVKUFZXeEpWRzE0YVdKV1NtMVhiVEExWXpKS1NFOVVUbGhsVjFJd1YyeG9UMlZzYkZoYVIzaExUVlJDTVZsNlRrTmpNa1paVlZjNVMwMVhlREphUms1RFpGWndXRlp0ZEVwVFJrb3lVMVZvYTJGSFJsbFZWMlJoWWxSc05WTlZaRVphTWtwMFZtcE9TbE5HU2pWWFZtTXhaV3hzV0ZScVFtaFdlbXd4VkVkc1FrNXJiRVJaTTBKWVpXdGFhMVJITlU5a01rcElZa1JDVEZFeVRqRlRibXh6V1dzeFIwMUZkRXBSTUVadVUxVk9RbG93YkVSUlYyUktVVEJHYmxOVlRrSmFNR3hFVVZka1NsRXdSbTVUVlU1Q1dqSk9TR0ZFUm10Uk1FVTFVMVZvVTJJeVNYbGlSelZvVmpCYU1WUkhOVTlrTWtwSVlrUkNURkV5VG01V1JtUnpaRmRTV1ZWdGVHcGxWMDUzVmpOd1ExcEZUbkJSVjJSS1VUQkdibE5WVGtKYU1HeEVVVmRrU2xFd1JtNVRWVTVDV2pCc1JGRlhaRXBSTUVadVUxVmthMk5HYkZsaE1tUlJWVEJLZDFsdE5WSmlNazVJWVVSR2ExRXlkRzVUTW14Q1RXc3hRbUl3ZEVwUk1FWnVVMVZPUWxvd2JFUlJWMlJLVVRCR2JsTlZUa0phTUd4RVVWZGtTbEV3Um01VFZVNUNXakZ3ZEU5WWJFcFNNblJ1V1Zaak1Gb3lUblJTYmxaaFRXeFdkbGRxU25OaFIxWlVaREprVGxFelpHNVVSbEpHWTBVNWJtSXlaRXBSTUVadVUxVk9RbG93YkVSUlYyUktVVEJHYmxOVlRrSmFNR3hFVVZka1NsRXdSbTVUVlU1Q1dqQnNSRkZYWkdwVFJYQjNXVzAxVTFwc2EzbFBXRTVwVFRCc2RsZHRiRXRaYlZWNlZtNXdZVmRGYnpWWFJrNURWakpTV0dFeVpGVlVWVGsxV1cweGFsb3hSWGxoYldneFRsUkNibHBVU25OUFZXeEdXa2hDTTA1cmJ6RlVSMnN3WkZWc2NHRXdkRXBSTUVadVUxVk9RbG93YkVSUlYyUktVVEJHYmxOVlRrSmFNR3hFVVZka1NsRXdSbTVUVlU1Q1dqQnNSRkZYWkVwVFJrcDNXV3hrVm1SWFRYbGxSM2hoVjBWR2RsUldUbkpUTUd4RVVWZGtTbEV3Um01VFZVNUNXakJzUkZGWFpFcFJNRVp1VTFWT1Fsb3diRVJSVjJSS1VUQkdibGRVU1RWa1YxSklZa2hXYTFZeFZreFRWVTVDV2pCc1JGRlhaRXBSTUVadVUxVk9RbG93YkVSUlYyUktVVEJHYmxOVlRrTmlSMVpJVkcxNGFsTkdSVEpSTW14Q1dqQnNSRkZYWkVwUk1FWnVVMVZPUWxvd2JFUlJWMlJLVVRCR2JsTlZUa0phTUd4RVVWZGtTbE5GU2pWWlZtTXhUVVpuZVZSdVdtbFNlbXcxVXpCa1dtRldZM3BrUkVacVRXeGFOVnBzV1hkYU1WSlFVbnBrYzAxdGRHNVZla3B4VWtoU1NFNVhOVXBTYlhCRllqRmtUbG96YUV0U1IyZ3hUa2hTTVZsVlRrcGpSVTV3VVZka1NsRXdSbTVUVlU1Q1dqQnNSRkZYWkVwUk1FWnVVMVZPUWxvd2JFUlJWMlJLVVRCR2JsTlZaRTlrYlVwMVZXNUNhV0pzV25OUk1teENXakJzUkZGWFpFcFJNRVp1VjJ4b2IyRnNjRmxSYWtKUVdqSTVibE5WVGtKYU1HeEVVVmRrU2xFd1JtNVRWVTVEWkRKT2RHSklWbXRTYW14eFdXcEtOR1J0VG5CaFJ6RktZa2hSTTFwR2FFOWlSMDUxVFZkU1NsSlljRzlrVkZaclkwVnNSbVJIT1ROT01Vb3hWMjVzUTFkWVl6SlNiWEJLVkZaT1VrNUhTakZVUjBwMFdqSnNURlZYT1c1VFZVNUNXakJzUkZGWFpFcFJNRVp1VTFWT1EyRnRTWGxPVkVKb1ZucFZlRmRzUm5aVE1HdzFVVmhTVFZWNlFtNVdSbVJIWTBkS2NGRnNSbXBpVkd4MVdUSXhSMlJGYkVSTlNGSk5WVmhDZDFkdGJFTmFiR2Q1VGxkb2FWWXhXbTFYU0d4Q1QxWkNWRkZYYkZsTlZHd3dWMVprYzJSV1ozaFBSMnhRV2pJNWJsTlZUa0phTWs1SlUyNUNhV0pzU20xWFZFazFZekpKZWxOWE9VdGxhbEl3VkVaT1ExWXlVbGhoTW1ScFZGVTVOVmx0TVdwYU1rcDBZVzFvTVdOVVJqTlRWVll3VW14a1ZGa3pRa1JoVlVadVUxVk9RMlF5VG5SaVNGWnJVbXBzY1ZscVNqUmtiVTV3V2pJMVRGRXdTazVaVjA1UVkxZEtjRkZ0T0RCWmJsWkpVMVZrUjJFeVNsaGlTRlpLVkZaT1UwNUhTakZTUld4T1ZURktOR05yVW05a1ZGcFBZV3RzU0ZWSGFERmpWbG96VTFWa01HSkhWbFJSYmxKb1dsVmpNMkZHWXpCYU1rNUlZV3RTZVZVd1JuZFRibXh5VXpCc1JGRlhaRXBUUlVvMVdWWmpNVTFHWjNsVWJscHBVbnBzTlZNd1RtcExNSGhVVFVka1VsWXhTakJaVm1Nd1RtdHNTRTlVU21GWFJXeHVXVEl4VjJKc2NGaFZia0pyVVRKT2QxRXliRUphTUd4RVVXNWthbUpYZURGYVJWazFZVzFKZVdWSVdtcGhWMlIxVlVkcmQyUkZiRWRpUmtKWFZteEtWMVZYZEZaT2EyeElUMVJLWVZkRmNITmFWV1JYV20xT2RGWnROV0ZXTVVwM1drVk9hbU5GVG5CUlYyUktVVEJLTTFreU1YTmtWMUpIVDFkd2FVMXVhREpaTW14dVlteENjRTFJVWtwU2JFcEhWa1ZXVjFOR1ZuSlNhelZRWVZWS05WcEdhRzlOVjA1MFlraENhMUV3Um5aVmExWnpVbXRzVUZNeVVuRlJNbmhxV1cxc2FtTkZUbTVpTW1SS1VUQkdibGxVU2xkT1ZtZDVZa2hXYWxOR1dYZFRWVkYzV2pKR1dFNVlaR3RYUmtaMlUycEJNV0o2VW1saldGSnFVVEJLVFZWc1duSk9hMnhFV1ROQ1RXSnJOSGRaTWpGelpEQjBSR0V3ZEVwUk1FWnVVMVZvVjJWc2NGbFRiVnBvVjBWR2JsVkdUa05pYkhCWlZXMWFhRmRGUm5aVE1VWjJVekJzUkZGWFpFcFNNbmgwVTFWak1XUnRVa1JSYWtacVRXeGFOVmRFU25Oa01EbHVZakprU2xFd1JtNVRWVTVDV2pCc1NWRnViR2hXZWxWM1YwUktUMlJ0U2toUFdHeE1VVEpTVFZsVk1WQk5SMHAwV1RKa2ExSXljRzlrVkZKT1dqSktVRko2V25kWFIzUnVWVEZhUW1Nd2JFbFhha1pvVlRCS2VtUjZaRXRrVm5BMVVXNUthRnBWWXpOYWVrbDNXakpTU1ZOdGFFcFNNMXB2WkZoSk5VMUZiRWhPTW1neFRsVmFkMU5WWTNwaFNGWjRVbTVXWVdWVVVuVlRNVVoyV2pCc1JGRlhaRXBSTUVadVUxVm9UMDVYVGpWT1YzaHNVakozZDFNd1RuSlRNRTV3VVZka1NsRXdTalZYYkdoUFRWZEtTVlZZVGtwU2VrWnpXWHBPVDJGR2IzbFdWMlJSVlRCS2NWbFZaRmRoYlVWNFQxaEtZVmRIZEhaWlZFcFhUbFpuZVdKSVZtcFRSbGwzVkVWT1EwMVhUWGxXYm14WlRXMTRNMU14Um5aVE1HeEVVVmRrU2xJeWVIUlRWV014WkcxU1JGRnViR0ZYUlRSNFdXdG9VazVyVG5CUlYyUktVVEJHYmxOVlRrSmFNazVKVTI1Q2FXSnNTbTFYVkVrMVl6SkplbE5YT1dsV01WbzJXWHBLUjJKc2NGUmhNSFJLVVRCR2JsTlZUa0phTUd4RVVXNXdiRmRGTVRGWGJHaHZZMGRTUkZvelFrUmhWVVp1VTFWT1EySkhTa2xVYlhoUVdqSTVibE5WVGtKYU1HeEVVVmRrU2xORlNqVlpWbU14VFVabmVWUnVXbWxTZW13MVV6QmplR0pIVFhwVWJXaGhUV3hXZDFFeVpIWmFNR3hFVVZka2ExZEZOWE5aTWpBeFlVZEtXRlp1Y0VwU1JFSnVWbnBGZDFNd2JFUlJWMlJLVWpGd01sa3liRU5qUld4SVlraFdTbE5GY0c5WmJURnJZa1YwUlZKWVRrcFNSa1ozVkRKa2Rsb3diRVJSVjJSS1VUQkdibE5WYUZkbGJIQlpVMWRrVVZVd1NuZFpiVFZEVFZkU1JHRkhNVXBoZWxaMlRrZEtlR1JIVGtSUmJGcHFUV3hhTlZsdE1VZGtSbkJVVVd4V2FGWXpVbFpaYWtwNldqSlZlV0pFYkVwUk1taE5XVlV4VUUxSFNuUlpNbVJwWWxkd2IyUllSWGhrTUd4R1VWaENVR0ZWUm5CVE1VMHhaVzFTU1ZOdVFtcFJNbVIzVVRKc1Fsb3diRVJSVjJSS1VUQkdibHBHYUU5aVIwNTBUbGRvYVZZeFdqWlVSekZIWkRKT1NGWnVWbUZSTW1kNFdYcEtWMlZWZEZKaU1IUktVVEJHYmxOVmFGTmlNazUwVm0xb1lWTkZNVzVWUms1RFdXeG9VbUl5WkVwUk1FWnVWMjB3TldWVmJFbFdibkJoVjBWc2JsbFdZekJhTWxKWlZHMTRhbUpVVm05WmJHUlhaV3M1Ym1JeVpFcFJNRVp1VTFWT1Fsb3diRWxWVjJSUlZUQkpkMWxWYUV0aVJteFlWVzVDYVdKWFRqRldhMlJ2WlZad1dGSnRkRXhUUmtwdldUSXhhMkpIVWtWTlYyeHJWakZ3ZEZkRVNtRmtiVXBJWlVoYWEyVllaRzVYVm1oTFltMU9OazFIT1d0WFJUVnpXVEpzTTJORmRGSmlNbVJLVVRCR2JsTlZUa0phTUd4SlZWaFdhazB4U205Wk1qVlNZakIwVW1JeVpFcFJNRVp1VTFWT1Fsb3diRWxWYlRscVlsWmFiMWRyYUU1a1ZteFpVVzVrWVZaNlZuSlRNR2hTWTBWT2JtSXlaRXBSTUVadVYyMHdOV1ZWYkVsVlYyUm9WbnBTYmxwRlpHOWxWbkJZVW0xMGFtVnRPVXhUVlU1Q1dqQnNSRkZYWkVwUk1FbDNWRWN4ZDJSdFJsaE9SemxNVlZjNE9RPT0='))))))
